---
import profileCategories from "../../../data/profileCategories.json";
import jobsCategories from "../../../data/jobsCategories.json";
import { backend_url } from "../../../data/conf.json";

import JobLayout from "../../../layouts/jobLayout.astro";
import JobCard from "../../../components/jobs/jobCard.astro";
import Pagination from "../../../components/pagination.astro";
import TelegramJobsChannelAlert from "../../../components/jobs/telegramJobsChannelAlert.astro";
import BreadcrumbContainer from "../../../components/ui/breadcrumbContainer.astro";

export async function getStaticPaths({ paginate }) {
  let allCategories = [];
  for (const key in jobsCategories) {
    allCategories.push({ key: key, slug: jobsCategories[key].slug, type: "job" });
  }

  for (const key in profileCategories) {
    allCategories.push({ key: key, slug: profileCategories[key].slug, type: "profile" });
  }

  const response = await fetch(backend_url + "api/jobs/get-all-jobs");
  const allJobs = await response.json();

  return allCategories.flatMap((categoryObj) => {
    let filteredJobs =
      categoryObj.type == "job"
        ? allJobs.filter((job) => job[categoryObj.key])
        : allJobs.filter((job) => job.categories && job.categories.includes(categoryObj.key));
    filteredJobs = filteredJobs.sort((a, b) => new Date(b.pubDate).valueOf() - new Date(a.pubDate).valueOf());
    const category = categoryObj.slug;
    return paginate(filteredJobs, {
      params: { category },
      pageSize: 18,
    });
  });
}
const { page } = Astro.props;
const params = Astro.params;

let category = {};

for (const [key, value] of Object.entries(jobsCategories)) {
  if (value.slug == params.category) {
    category = value;
    break;
  }
}

for (const [key, value] of Object.entries(profileCategories)) {
  if (value.slug == params.category) {
    category = value;
    break;
  }
}

let title = `Directorio de Empleos`;
if (category.text) title += ` | ${category.text}`;
if (page.currentPage != 1) title += ` | Página ${page.currentPage}`;
title += " | CuCoders";
---

<JobLayout
  title={title}
  description="Encuentra las mejores oportunidades laborales en tecnología en Cucoders. Explora nuestro directorio de empleos para programadores y encuentra el trabajo perfecto para ti. Únete a nuestra comunidad de programadores en Cuba y lleva tu carrera al siguiente nivel."
>
  <TelegramJobsChannelAlert />

  <BreadcrumbContainer
    breadcrumbItems={[{ label: "Empleos", url: "/empleos", home: true }, { label: category.text }]}
    btnLabel="Publicar Empleo"
    btnUrl="/nuevo-empleo"
    btnIcon="/assets/img/icons/business.svg"
  />

  {page.data.length == 0 && <img src="/assets/img/emptyList.webp" class="md:w-2/3 w-full mx-auto my-4 dark:opacity-50" />}

  <div class="grid mb-6 w-full gap-4 md:grid-cols-1 mx-auto">
    {page.data.map((job) => <JobCard job={job} />)}
  </div>

  <Pagination prev={page.url.prev} next={page.url.next} />
</JobLayout>
